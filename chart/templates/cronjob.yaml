{{- if .Values.cronJob.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "n8n.fullname" . }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  schedule: {{ .Values.cronJob.schedule | quote }}
  {{- if .Values.cronJob.concurrencyPolicy }}
  concurrencyPolicy: {{ .Values.cronJob.concurrencyPolicy }}
  {{- end }}
  {{- if .Values.cronJob.successfulJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ .Values.cronJob.successfulJobsHistoryLimit }}
  {{- end }}
  {{- if .Values.cronJob.failedJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.cronJob.failedJobsHistoryLimit }}
  {{- end }}
  jobTemplate:
    spec:
      {{- if .Values.cronJob.activeDeadlineSeconds }}
      activeDeadlineSeconds: {{ .Values.cronJob.activeDeadlineSeconds }}
      {{- end }}
      {{- if .Values.cronJob.backoffLimit }}
      backoffLimit: {{ .Values.cronJob.backoffLimit }}
      {{- end }}
      {{- if .Values.cronJob.ttlSecondsAfterFinished }}
      ttlSecondsAfterFinished: {{ .Values.cronJob.ttlSecondsAfterFinished }}
      {{- end }}
      template:
        metadata:
          {{- with .Values.podTemplateMetadata }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          labels:
            {{- include "n8n.selectorLabels" . | nindent 12 }}
            {{- with .Values.labels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        spec:
          restartPolicy: {{ .Values.cronJob.restartPolicy }}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          serviceAccountName: {{ include "n8n.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 10 }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.initContainers }}
          initContainers:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          containers:
            - name: {{ .Chart.Name }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 14 }}
              image: "{{ include "n8n.image" . }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              ports:
                - name: http
                  containerPort: {{ .Values.service.targetPort }}
                  protocol: TCP
              resources:
                {{- toYaml .Values.resources | nindent 14 }}
              {{- if .Values.persistence.enabled }}
              volumeMounts:
                - name: {{ include "n8n.fullname" . }}-data
                  mountPath: {{ .Values.persistence.mountPath }}
              {{- end }}
              {{- with .Values.extraVolumeMounts }}
              {{- toYaml . | nindent 12 }}
              {{- end }}
              env:
                # Database configuration
                {{- include "n8n.databaseEnvVars" . | nindent 16 }}
                
                # Redis configuration
                {{- include "n8n.redisEnvVars" . | nindent 16 }}
                
                # Generic configuration
                {{- include "n8n.genericEnvVars" . | nindent 16 }}
                
                # Security configuration
                {{- include "n8n.securityEnvVars" . | nindent 16 }}
                
                # Authentication configuration
                {{- include "n8n.authEnvVars" . | nindent 16 }}
                
                # Endpoints configuration
                {{- include "n8n.endpointsEnvVars" . | nindent 16 }}
                
                # Prometheus metrics configuration
                {{- include "n8n.metricsEnvVars" . | nindent 16 }}
                
                # Executions configuration
                {{- include "n8n.executionsEnvVars" . | nindent 16 }}
                
                # Logging configuration
                {{- include "n8n.loggingEnvVars" . | nindent 16 }}
                
                # Workflows configuration
                {{- include "n8n.workflowsEnvVars" . | nindent 16 }}
                
                # User management configuration
                {{- include "n8n.userManagementEnvVars" . | nindent 16 }}
                
                # Basic authentication
                {{- include "n8n.basicAuthEnvVars" . | nindent 16 }}
                
                # Webhook configuration
                {{- include "n8n.webhookEnvVars" . | nindent 16 }}
                
                # Encryption and JWT
                {{- include "n8n.encryptionEnvVars" . | nindent 16 }}
                
                # ConfigMap environment variables
                {{- if .Values.configMap.enabled }}
                {{- range $key, $value := .Values.configMap.data }}
                - name: {{ $key }}
                  valueFrom:
                    configMapKeyRef:
                      name: {{ include "n8n.configMapName" $ }}
                      key: {{ $key }}
                {{- end }}
                {{- end }}
                
                # Secret environment variables
                {{- if .Values.secret.enabled }}
                {{- range $key, $value := .Values.secret.data }}
                - name: {{ $key }}
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "n8n.secretName" $ }}
                      key: {{ $key }}
                {{- end }}
                {{- end }}
                
                # Additional environment variables
                {{- with .Values.env }}
                {{- range $key, $value := . }}
                - name: {{ $key }}
                  value: {{ $value | quote }}
                {{- end }}
                {{- end }}
          {{- with .Values.sidecarContainers }}
          {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- if .Values.persistence.enabled }}
          volumes:
            - name: {{ include "n8n.fullname" . }}-data
              persistentVolumeClaim:
                claimName: {{ include "n8n.fullname" . }}-data
          {{- end }}
          {{- with .Values.extraVolumes }}
          {{- toYaml . | nindent 8 }}
          {{- end }}
{{- end }} 