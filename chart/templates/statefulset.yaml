{{- if .Values.statefulSet.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "n8n.fullname" . }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ .Values.statefulSet.serviceName | default (printf "%s-headless" (include "n8n.fullname" .)) }}
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: {{ .Values.statefulSet.podManagementPolicy }}
  revisionHistoryLimit: {{ .Values.statefulSet.revisionHistoryLimit }}
  {{- with .Values.statefulSet.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podTemplateMetadata }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      labels:
        {{- include "n8n.selectorLabels" . | nindent 8 }}
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "n8n.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "n8n.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.startupProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: {{ include "n8n.fullname" . }}-data
              mountPath: {{ .Values.persistence.mountPath }}
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          env:
            # Database configuration
            {{- include "n8n.databaseEnvVars" . | nindent 12 }}
            
            # Redis configuration
            {{- include "n8n.redisEnvVars" . | nindent 12 }}
            
            # Generic configuration
            {{- include "n8n.genericEnvVars" . | nindent 12 }}
            
            # Security configuration
            {{- include "n8n.securityEnvVars" . | nindent 12 }}
            
            # Authentication configuration
            {{- include "n8n.authEnvVars" . | nindent 12 }}
            
            # Endpoints configuration
            {{- include "n8n.endpointsEnvVars" . | nindent 12 }}
            
            # Prometheus metrics configuration
            {{- include "n8n.metricsEnvVars" . | nindent 12 }}
            
            # Executions configuration
            {{- include "n8n.executionsEnvVars" . | nindent 12 }}
            
            # Logging configuration
            {{- include "n8n.loggingEnvVars" . | nindent 12 }}
            
            # Workflows configuration
            {{- include "n8n.workflowsEnvVars" . | nindent 12 }}
            
            # User management configuration
            {{- include "n8n.userManagementEnvVars" . | nindent 12 }}
            
            # Basic authentication
            {{- include "n8n.basicAuthEnvVars" . | nindent 12 }}
            
            # Webhook configuration
            {{- include "n8n.webhookEnvVars" . | nindent 12 }}
            
            # Encryption and JWT
            {{- include "n8n.encryptionEnvVars" . | nindent 12 }}
            
            # ConfigMap environment variables
            {{- if .Values.configMap.enabled }}
            {{- range $key, $value := .Values.configMap.data }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" $ }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            
            # Secret environment variables
            {{- if .Values.secret.enabled }}
            {{- range $key, $value := .Values.secret.data }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "n8n.secretName" $ }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            
            # Additional environment variables
            {{- with .Values.env }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
      {{- with .Values.sidecarContainers }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: {{ include "n8n.fullname" . }}-data
          persistentVolumeClaim:
            claimName: {{ include "n8n.fullname" . }}-data
      {{- end }}
      {{- with .Values.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "n8n.fullname" . }}-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }}
{{- end }} 